var mdbm=function(e){"use strict";function n(){libByName("Object"),libByName("mdbm.Type")}function t(e){return libByName("mdbm.Type").entries().find(n=>n.field("Name")===e)}function i(e){return!(void 0!==t(e))}const s=e=>"Type '"+e+"' does not exist!";function o(e,n){e.field("hasTypes").map(e=>e.field("Name")).includes(n)||e.link("hasTypes",t(n))}const c={open:function(e){e.set("hasTypes",t("Object"))},post:function(e){return o(e,"Object"),o(e,e.field("Name")),e}};const a={check:function(e){if(i(e))throw s(e)},create:function(e,n){const t=libByName("mdbm.Type").create({});return t.set("Name",e),void 0===n?c.open(t):t.set("hasTypes",baseType.field("hasTypes")),c.post(t),t},isMissing:i,onCreate:c},p={post:function(e){n(),a.isMissing(e.title)&&message("Type '"+e.title+"' is not defined!")}};const f={onOpen:p};const r={onCreate:{open:function(e){},post:function(e){}}};return e.library=f,e.object=r,e.type=a,e}({});
