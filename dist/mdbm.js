var mdbm=function(n,t){"use strict";function e(n){return libByName(n)}function s(){e("Object"),e("mdbm.Type")}function i(n){return libByName("mdbm.Type").entries().find(t=>t.field("Name")===n)}function o(n){return void 0!==i(n)}function c(n){return!o(n)}const r={post:function(n){s(),c(n.title)&&message("Type '"+n.title+"' is not defined!")}};const u={createEntry:function(n){return e(n).create({})},get:e,onOpen:r},f={parse:function(n){return JSON.parse(n)},stringify:function(n){return JSON.stringify(n,null,2)}};const a={json:f},l={alreadyExists:function(n){return"Type '"+n+"' does already exist!"},isMissing:function(n){return"Type '"+n+"' does not exist!"}};const p="hasTypes";function d(n,t){const e=function(n){return n.field(p)}(n).map(n=>n.field("Name"));e.includes(t)||n.link(p,i(t))}const m={open:function(n){n.set("hasTypes",i("Object"))},post:function(n){return d(n,"Object"),d(n,n.field("Name")),n}};function y(n,t){return n[t]=null,n}const g={check:function(n){if(c(n))throw l.isMissing(n)},create:function(n,t){if(o(n))throw l.existsAlready(n);return function(n,t){const e=u.createEntry("mdbm.Type");e.set("Name",n),void 0===t?m.open(e):e.set("hasTypes",t.field("hasTypes"));return m.post(e),e}(n,t)},emptyIds:function(n){return function(n){return i(n).field("hasTypes").map(n=>n.field("Name"))}(n).reduce(y,Object.create(null))},fromObjectEntry:function(n){return i(t.object.typeName(n))},isMissing:c,messages:l,onCreate:m};function b(n){return n.field("mdbm.Type")}const j={addMissing:function(n){const t=Object.assign(Object.create(null),g.emptyIds(b(n)),N(n));O(n,t)},createMissing:function(n){const t=N(n);Object.keys(t).forEach(function(n){null===t[n]&&(t[n]=u.createEntry(n).id)}),O(n,t)},get:function(n,t){return N(n)[t]},getAll:N,set:T,setAll:O,setEmpty:function(n){const t=g.emptyIds(b(n));O(n,t)},setSelf:function(n){T(n,b(n),n.id)}},h="mdbm.Ids";function N(n){return a.json.parse(n.field(h))}function T(n,t,e){const s=N(n);s[t]=e,O(n,s)}function O(n,t){n.set(h,a.json.stringify(t))}function E(n){const t=g.fromObjectEntry(n).field("DisplayNamePattern").replace(/\$\{(.*?)\}/g,(t,e)=>function(n,t){return n.field(t)}(n,e));return n.set("DisplayName",t),t}const M={open:function(n,t){message("nothing")},post:function(n){j.addMissing(n),j.createMissing(n),message(E(n))}};const w={open:function(n,t){const e=t.title;if(g.isMissing(e))throw t.show(),g.messages.isMissing(e);n.set("mdbm.Type",e),j.setEmpty(n)},post:function(n){j.setSelf(n),M.post(n)}};const x={create:function(n){const t=u.createEntry(n);w.open(t,u.get(n)),w.post(t),t.show()},displayName:E,onCreate:w};return n.library=u,n.object=x,n.type=g,n}({},_object);
