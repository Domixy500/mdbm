var mdbm=function(e,t){"use strict";function n(){libByName("Object"),libByName("mdbm.Type")}function i(){return libByName("mdbm.Type").entries()}function r(e){return i().some(t=>t.field("Name")===e)}const s={create:function(e,t){const n=libByName("mdbm.Type").create({});return n.set("Name",e),void 0!==t&&n.set("hasTypes",t.field("hasTypes")),n.link("hasTypes",n),n},entries:i,exists:r,find:function(e){return i().find(t=>t.field("Name")===e)},isMissing:function(e){return!r(e)}},o={post:function(e){if(n(),s.isMissing(e.title))throw"Type '"+e.title+"' is not defined!"}};const c={onOpen:o};return Object.defineProperty(e,"object",{enumerable:!0,get:function(){return t.object}}),e.library=c,e}({},_object);
