var mdbm=function(e,t){"use strict";function n(){libByName("Object"),libByName("mdbm.Type")}function s(e){return libByName("mdbm.Type").entries().find(t=>t.field("Name")===e)}function i(e){return void 0!==s(e)}function o(e){return!i(e)}const c={alreadyExists:function(e){return"Type '"+e+"' does already exist!"},isMissing:function(e){return"Type '"+e+"' does not exist!"}};function r(e,t){e.field("hasTypes").map(e=>e.field("Name")).includes(t)||e.link("hasTypes",s(t))}const f={open:function(e){e.set("hasTypes",s("Object"))},post:function(e){return r(e,"Object"),r(e,e.field("Name")),e}};const u={check:function(e){if(o(e))throw c.isMissing(e)},create:function(e,t){if(i(e))throw c.existsAlready(e);return function(e,t){const n=libByName("mdbm.Type").create({});n.set("Name",e),void 0===t?f.open(n):n.set("hasTypes",t.field("hasTypes"));return f.post(n),n}(e,t)},emptyIds:function(e){const t=s(e).field("hasTypes").map(e=>e.field("Name")),n=Object.create(null);return t.forEach(e=>n[e]=null),n},isMissing:o,messages:c,onCreate:f},a={post:function(e){n(),u.isMissing(e.title)&&message("Type '"+e.title+"' is not defined!")}};const m={onOpen:a};function l(e){return e.field("mdbm.Type")}const d={get:function(e,t){return p(e)[t]},getAll:p,set:b,setAll:y,setEmpty:function(e){const t=u.emptyIds(l(e));y(e,t)},setSelf:function(e){b(e,l(e),e.id)}};function p(e){return t.json.parse(e.field("mdbm.Ids"))}function y(e,n){e.set("mdbm.Ids",t.json.stringify(n))}function b(e,t,n){const s=p(e);s[t]=n,y(s)}const T={open:function(e,t){const n=t.title;if(u.isMissing(n))throw t.show(),u.messages.isMissing(n);e.set("mdbm.Type",n),d.setEmpty(e)},post:function(e){d.setSelf(e)}};const h={create:function(e){const t=libByName(e).create({});T.open(t,libByName(e)),T.post(t),t.show()},onCreate:T};return e.library=m,e.object=h,e.type=u,e}({},json);
