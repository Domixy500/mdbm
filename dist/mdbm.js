var mdbm=function(e){"use strict";function t(){libByName("Object"),libByName("mdbm.Type")}function n(e){return libByName("mdbm.Type").entries().find(t=>t.field("Name")===e)}function i(e){return void 0!==n(e)}function s(e){return!i(e)}const o={alreadyExists:function(e){return"Type '"+e+"' does already exist!"},isMissing:function(e){return"Type '"+e+"' does not exist!"}};function c(e,t){e.field("hasTypes").map(e=>e.field("Name")).includes(t)||e.link("hasTypes",n(t))}const r={open:function(e){e.set("hasTypes",n("Object"))},post:function(e){return c(e,"Object"),c(e,e.field("Name")),e}};const a={check:function(e){if(s(e))throw o.isMissing(e)},create:function(e,t){if(i(e))throw o.existsAlready(e);return function(e,t){const n=libByName("mdbm.Type").create({});n.set("Name",e),void 0===t?r.open(n):n.set("hasTypes",t.field("hasTypes"));return r.post(n),n}(e,t)},isMissing:s,messages:o,onCreate:r},u={post:function(e){t(),a.isMissing(e.title)&&message("Type '"+e.title+"' is not defined!")}};const f={onOpen:u},m={open:function(e,t){const n=t.title;if(a.isMissing(n))throw t.show(),a.messages.isMissing(n);e.set("mdbm.Type",n)},post:function(e){}};const p={create:function(e){object=libByName(e).create({}),m.open(object,libByName(e))},onCreate:m};return e.library=f,e.object=p,e.type=a,e}({});
