var mdbm=function(n){"use strict";function t(){libByName("Object"),libByName("mdbm.Type")}function i(e){return libByName("mdbm.Type").entries().find(n=>n.field("Name")===e)}function s(e){return!(void 0!==i(e))}const o=e=>"Type '"+e+"' does not exist!";function c(n,t){n.field("hasTypes").map(n=>e.field("Name")).includes(t)&&n.link("hasTypes",i(t))}const a={open:function(e){e.set("hasTypes",i("Object"))},post:function(e){return c(e,"Object"),c(e,e.field("Name")),e}};const f={check:function(e){if(s(e))throw o(e)},create:function(e,n){const t=libByName("mdbm.Type").create({});return t.set("Name",e),void 0===n?a.open(t):t.set("hasTypes",n.field("hasTypes")),t},isMissing:s,onCreate:a},r={post:function(e){t(),f.isMissing(e.title)&&message("Type '"+e.title+"' is not defined!")}};const p={onOpen:r};const u={onCreate:{open:function(e){},post:function(e){}}};return n.library=p,n.object=u,n.type=f,n}({});
