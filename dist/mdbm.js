var mdbm=function(e){"use strict";function t(){libByName("Object"),libByName("mdbm.Type")}function n(e){return libByName("mdbm.Type").entries().find(t=>t.field("Name")===e)}function s(e){return void 0!==n(e)}function i(e){return!s(e)}const o={alreadyExists:function(e){return"Type '"+e+"' does already exist!"},isMissing:function(e){return"Type '"+e+"' does not exist!"}};function c(e,t){e.field("hasTypes").map(e=>e.field("Name")).includes(t)||e.link("hasTypes",n(t))}const r={open:function(e){e.set("hasTypes",n("Object"))},post:function(e){return c(e,"Object"),c(e,e.field("Name")),e}};const f={check:function(e){if(i(e))throw o.isMissing(e)},create:function(e,t){if(s(e))throw o.existsAlready(e);return function(e,t){const n=libByName("mdbm.Type").create({});n.set("Name",e),void 0===t?r.open(n):n.set("hasTypes",t.field("hasTypes"));return r.post(n),n}(e,t)},emptyIds:function(e){const t=n(e).field("hasTypes").map(e=>e.field("Name")),s=Object.create(null);return t.forEach(e=>s[e]=null),s},isMissing:i,messages:o,onCreate:r},u={post:function(e){t(),f.isMissing(e.title)&&message("Type '"+e.title+"' is not defined!")}};const a={onOpen:u},l={parse:function(e){return JSON.parse(e)},stringify:function(e){return JSON.stringify(e,null,2)}};function m(e){return e.field("mdbm.Type")}const p={get:function(e,t){return d(e)[t]},getAll:d,set:b,setAll:y,setEmpty:function(e){const t=f.emptyIds(m(e));y(e,t)},setSelf:function(e){b(e,m(e),e.id)}};function d(e){return l.parse(e.field("mdbm.Ids"))}function y(e,t){e.set("mdbm.Ids",l.stringify(t))}function b(e,t,n){const s=d(e);s[t]=n,y(e,s)}const g={open:function(e,t){const n=t.title;if(f.isMissing(n))throw t.show(),f.messages.isMissing(n);e.set("mdbm.Type",n),p.setEmpty(e)},post:function(e){p.setSelf(e)}};const T={create:function(e){const t=libByName(e).create({});g.open(t,libByName(e)),g.post(t),t.show()},onCreate:g};return e.library=a,e.object=T,e.type=f,e}({});
