{"version":3,"file":"mdbm-debug.js","sources":["../src/library/checkAccess.js","../src/type/entries.js","../src/type/find.js","../src/type/exists.js","../src/type/isMissing.js","../src/type/check.js","../src/type/onCreate.js","../src/type/create.js","../src/type/index.js","../src/library/onOpen.js","../src/library/index.js","../src/object/onCreate.js","../src/object/index.js"],"sourcesContent":["/*jslint beta*/\n/*global\n    libByName\n*/\n\nfunction checkAccess() {\n    libByName(\"Object\");\n    libByName(\"mdbm.Type\");\n}\n\nexport {\n    checkAccess\n};\n","/*jslint beta*/\n/*global\n    libByName\n*/\n\nfunction entries() {\n    return libByName(\"mdbm.Type\").entries();\n}\n\nexport {\n    entries\n};\n","/*jslint beta*/\n/*global\n    libByName\n*/\n\nimport {entries} from \"./entries\";\n\nfunction find(typeName) {\n    return entries().find(\n        (e) => e.field(\"Name\") === typeName\n    );\n}\n\nexport {\n    find\n};\n","/*jslint beta*/\n/*global*/\n\nimport {find} from \"./find\";\n\nfunction exists(typeName) {\n    return find(typeName) !== undefined;\n}\n\nexport {\n    exists\n};\n","/*jslint beta*/\n/*global*/\n\nimport {exists} from \"./exists\";\n\nfunction isMissing(name) {\n    return !exists(name);\n}\n\nexport {\n    isMissing\n};\n","/*jslint beta*/\n/*global*/\n\nimport {isMissing} from \"./isMissing\";\n\nconst msg = {\n    isMissing: (x) => \"Type '\" + x + \"' does not exist!\"\n};\n\nfunction check(typeName) {\n    if (isMissing(typeName)) {\n        throw msg.isMissing(typeName);\n    }\n}\n\nexport {\n    check\n};\n","/*jslint beta*/\n/*global*/\n\nimport {find} from \"./find\";\n\nconst onCreate = {\n    open,\n    post\n};\n\nfunction open(e) {\n    e.set(\n        \"hasTypes\",\n        find(\"Object\")\n    );\n}\n\nfunction post(e) {\n    e.link(\n        \"hasTypes\",\n        find(\"Object\")\n    );\n    return e;\n}\n\nexport {\n    onCreate\n};\n","/*jslint beta*/\n/*global\n    libByName\n*/\n\nimport {onCreate} from \"./onCreate\";\n\nfunction create(typeName, baseType) {\n    const typeEntry = libByName(\"mdbm.Type\").create({});\n    typeEntry.set(\"Name\", typeName);\n    if (baseType === undefined) {\n        onCreate.open(typeEntry);\n    } else {\n        typeEntry.set(\n            \"hasTypes\",\n            baseType.field(\"hasTypes\")\n        );\n    }\n    //onCreate.post(typeEntry);\n    return typeEntry;\n}\n\nexport {\n    create\n};\n","/*jslint beta*/\n/*global*/\n\nimport {check} from \"./check\";\nimport {create} from \"./create\";\nimport {entries} from \"./entries\";\nimport {exists} from \"./exists\";\nimport {find} from \"./find\";\nimport {isMissing} from \"./isMissing\";\nimport {onCreate} from \"./onCreate.js\";\n\nconst type = {\n    check,\n    create,\n    isMissing\n};\n\nexport {\n    type\n};\n","/*jslint beta*/\n/*global\n    message\n*/\n\nimport {checkAccess} from \"./checkAccess\";\nimport {type} from \"@type\";\n\nconst onOpen = {\n    post\n};\n\nfunction post(library) {\n    checkAccess();\n    if (type.isMissing(library.title)) {\n        message(\"Type '\" + library.title + \"' is not defined!\");\n    }\n}\n\nexport {\n    onOpen\n};\n","/*jslint beta*/\n/*global*/\n\nimport {onOpen} from \"./onOpen\";\n\nconst library = {\n    onOpen\n};\n\nexport {\n    library\n};\n","/*jslint beta*/\n/*global\n    cancel\n    lib\n*/\n\nimport {library} from \"@library\";\n\nconst onCreate = {\n    open,\n    post\n};\n\nfunction open(e) {\n    \n    // const library = lib();\n    // if (type.isMissing(library.title)) {\n    //     library.show();\n    //     //throw (\"Type '\" + library.title + \"' is not defined!\"\n    //     //);\n    // }\n}\n\nfunction post(e) {\n    \n}\n\nexport {\n    onCreate\n};\n","/*jslint beta*/\n/*global*/\n\nimport {onCreate} from \"./onCreate\";\n\nconst object = {\n    onCreate\n};\n\nexport {\n    object\n};\n"],"names":["checkAccess","libByName","entries","find","typeName","e","field","exists","undefined","isMissing","name","msg","x","check","onCreate","open","post","set","link","create","baseType","typeEntry","type","onOpen","library","title","message","object"],"mappings":";;IAKA,SAASA;QACLC,UAAU;QACVA,UAAU;AACd;ICHA,SAASC;QACL,OAAOD,UAAU,aAAaC;AAClC;ICAA,SAASC,KAAKC;QACV,OAAOF,UAAUC,KACZE,KAAMA,EAAEC,MAAM,YAAYF;AAEnC;ICNA,SAASG,OAAOH;QACZ,OAAOD,KAAKC,cAAcI;AAC9B;ICFA,SAASC,UAAUC;QACf,QAAQH,OAAOG;AACnB;ICFA,MAAMC,MAAM;QACRF,WAAYG,KAAM,WAAWA,IAAI;;IAGrC,SAASC,MAAMT;QACX,IAAIK,UAAUL,WAAW;YACrB,MAAMO,IAAIF,UAAUL;AACxB;AACJ;ICRA,MAAMU,aAAW;QACjBC,MAAIA;QACJC,MAAIA;;IAGJ,SAASD,OAAKV;QACVA,EAAEY,IACE,YACAd,KAAK;AAEb;IAEA,SAASa,OAAKX;QACVA,EAAEa,KACE,YACAf,KAAK;QAET,OAAOE;AACX;IChBA,SAASc,OAAOf,UAAUgB;QACtB,MAAMC,YAAYpB,UAAU,aAAakB,OAAO,CAAA;QAChDE,UAAUJ,IAAI,QAAQb;QACtB,IAAIgB,aAAaZ,WAAW;YACxBM,WAASC,KAAKM;AAClB,eAAO;YACHA,UAAUJ,IACN,YACAG,SAASd,MAAM;AAEvB;QAEA,OAAOe;AACX;ICTK,MAACC,OAAO;QACTT;QACAM;QACAV;;ICNJ,MAAMc,SAAS;QACfP,MAAIA;;IAGJ,SAASA,OAAKQ;QACVxB;QACA,IAAIsB,KAAKb,UAAUe,QAAQC,QAAQ;YAC/BC,QAAQ,WAAWF,QAAQC,QAAQ;AACvC;AACJ;ICZK,MAACD,UAAU;QACZD;;ICEJ,MAAMT,WAAW;QACbC;QACAC;;IAGJ,SAASD,KAAKV,IAQd;IAEA,SAASW,KAAKX,IAEd;ICpBK,MAACsB,SAAS;QACXb;;;;;;"}