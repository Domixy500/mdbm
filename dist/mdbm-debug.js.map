{"version":3,"file":"mdbm-debug.js","sources":["../src/library/getLibrary.js","../src/library/createEntry.js","../src/library/checkAccess.js","../src/type/entries.js","../src/type/find.js","../src/type/exists.js","../src/type/isMissing.js","../src/library/onOpen.js","../src/library/index.js","../src/common/json.js","../src/common/index.js","../src/type/messages.js","../src/type/check.js","../src/type/addType.js","../src/type/onCreate.js","../src/type/create.js","../src/type/hasTypesNames.js","../src/type/emptyIds.js","../src/type/index.js","../src/object/typeName.js","../src/object/ids.js","../src/object/displayName.js","../src/object/onSave.js","../src/object/onCreate.js","../src/object/create.js","../src/object/index.js"],"sourcesContent":["/*jslint beta*/\r\n/*global\r\n    libByName\r\n*/\r\n\r\nfunction getLibrary(libraryName) {\r\n    return libByName(libraryName);\r\n}\r\n\r\nexport {\r\n    getLibrary\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {getLibrary} from \"./getLibrary\";\r\n\r\nfunction createEntry(libraryName) {\r\n    return getLibrary(libraryName).create({});\r\n}\r\n\r\nexport {\r\n    createEntry\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {getLibrary} from \"./getLibrary\";\r\n\r\nfunction checkAccess() {\r\n    getLibrary(\"Object\");\r\n    getLibrary(\"mdbm.Type\");\r\n}\r\n\r\nexport {\r\n    checkAccess\r\n};\r\n","/*jslint beta*/\r\n/*global\r\n    libByName\r\n*/\r\n\r\nfunction entries() {\r\n    return libByName(\"mdbm.Type\").entries();\r\n}\r\n\r\nexport {\r\n    entries\r\n};\r\n","/*jslint beta*/\r\n/*global\r\n    libByName\r\n*/\r\n\r\nimport {entries} from \"./entries\";\r\n\r\nfunction find(typeName) {\r\n    return entries().find(\r\n        (e) => e.field(\"Name\") === typeName\r\n    );\r\n}\r\n\r\nexport {\r\n    find\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {find} from \"./find\";\r\n\r\nfunction exists(typeName) {\r\n    return find(typeName) !== undefined;\r\n}\r\n\r\nexport {\r\n    exists\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {exists} from \"./exists\";\r\n\r\nfunction isMissing(name) {\r\n    return !exists(name);\r\n}\r\n\r\nexport {\r\n    isMissing\r\n};\r\n","/*jslint beta*/\r\n/*global\r\n    message\r\n*/\r\n\r\nimport {checkAccess} from \"./checkAccess\";\r\nimport {isMissing} from \"@type/isMissing\";\r\n\r\nconst onOpen = {\r\n    post\r\n};\r\n\r\nfunction post(library) {\r\n    checkAccess();\r\n    if (isMissing(library.title)) {\r\n        message(\"Type '\" + library.title + \"' is not defined!\");\r\n    }\r\n}\r\n\r\nexport {\r\n    onOpen\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {createEntry} from \"./createEntry\";\r\nimport {getLibrary} from \"./getLibrary\";\r\nimport {onOpen} from \"./onOpen\";\r\n\r\nconst library = {\r\n    createEntry,\r\n    get: getLibrary,\r\n    onOpen\r\n};\r\n\r\nexport {\r\n    library\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nconst json = {\r\n    parse,\r\n    stringify\r\n};\r\n\r\nfunction parse(jsonString) {\r\n    return JSON.parse(jsonString);\r\n}\r\n\r\nfunction stringify(object) {\r\n    return JSON.stringify(object, null, 2);\r\n}\r\n\r\nexport {\r\n    json\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {json} from \"./json\";\r\n\r\nconst common = {\r\n    json\r\n};\r\n\r\nexport {\r\n    common\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nconst messages = {\r\n    alreadyExists,\r\n    isMissing\r\n};\r\n\r\nfunction alreadyExists(x) {\r\n    return \"Type '\" + x + \"' does already exist!\";\r\n}\r\n\r\nfunction isMissing(x) {\r\n    return \"Type '\" + x + \"' does not exist!\";\r\n}\r\n\r\nexport {\r\n    messages\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {isMissing} from \"./isMissing\";\r\nimport {messages} from \"./messages\";\r\n\r\nfunction check(typeName) {\r\n    if (isMissing(typeName)) {\r\n        throw messages.isMissing(typeName);\r\n    }\r\n}\r\n\r\nexport {\r\n    check\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {find} from \"./find\";\r\n\r\nconst hasTypesField = \"hasTypes\";\r\n\r\nfunction addType(typeEntry, typeName) {\r\n    const hasTypeNames = hasTypes(typeEntry).map(\r\n        (e) => e.field(\"Name\")\r\n    );\r\n    if (!hasTypeNames.includes(typeName)) {\r\n        typeEntry.link(\r\n            hasTypesField,\r\n            find(typeName)\r\n        );\r\n    }\r\n}\r\n\r\nfunction hasTypes(typeEntry) {\r\n    return typeEntry.field(hasTypesField);\r\n}\r\n\r\nexport {\r\n    addType\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {addType} from \"./addType\";\r\nimport {find} from \"./find\";\r\n\r\nconst onCreate = {\r\n    open,\r\n    post\r\n};\r\n\r\nfunction open(e) {\r\n    e.set(\r\n        \"hasTypes\",\r\n        find(\"Object\")\r\n    );\r\n}\r\n\r\nfunction post(e) {\r\n    addType(e, \"Object\");\r\n    addType(e, e.field(\"Name\"));\r\n    return e;\r\n}\r\n\r\nexport {\r\n    onCreate\r\n};\r\n","/*jslint beta*/\r\n/*global\r\n    libByName\r\n*/\r\n\r\nimport {exists} from \"./exists\";\r\nimport {library} from \"@library\";\r\nimport {messages} from \"./messages\";\r\nimport {onCreate} from \"./onCreate\";\r\n\r\nfunction create(typeName, baseType) {\r\n    if (exists(typeName)) {\r\n        throw messages.existsAlready(typeName);\r\n    }\r\n    return createType(typeName, baseType);\r\n}\r\n\r\nfunction createType(typeName, baseType) {\r\n    const typeEntry = library.createEntry(\"mdbm.Type\");\r\n    typeEntry.set(\"Name\", typeName);\r\n    if (baseType === undefined) {\r\n        onCreate.open(typeEntry);\r\n    } else {\r\n        typeEntry.set(\r\n            \"hasTypes\",\r\n            baseType.field(\"hasTypes\")\r\n        );\r\n    }\r\n    onCreate.post(typeEntry);\r\n    return typeEntry;\r\n}\r\n\r\nexport {\r\n    create\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {find} from \"./find\";\r\n\r\nfunction hasTypesNames(typeName) {\r\n    const hasTypes = find(typeName).field(\"hasTypes\");\r\n    return hasTypes.map(\r\n        (x) => x.field(\"Name\")\r\n    );\r\n}\r\n\r\nexport {\r\n    hasTypesNames\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {hasTypesNames} from \"./hasTypesNames\";\r\n\r\nfunction addEmptyId(entryIds, name) {\r\n    entryIds[name] = null;\r\n    return entryIds;\r\n}\r\n\r\nfunction emptyIds(typeName) {\r\n    return hasTypesNames(typeName).reduce(\r\n        addEmptyId,\r\n        Object.create(null)\r\n    );\r\n}\r\n\r\nexport {\r\n    emptyIds\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {check} from \"./check\";\r\nimport {create} from \"./create\";\r\nimport {entries} from \"./entries\";\r\nimport {exists} from \"./exists\";\r\nimport {find} from \"./find\";\r\nimport {emptyIds} from \"./emptyIds\";\r\nimport {isMissing} from \"./isMissing\";\r\nimport {messages} from \"./messages.js\";\r\nimport {onCreate} from \"./onCreate.js\";\r\n\r\nconst type = {\r\n    check,\r\n    create,\r\n    emptyIds,\r\n    isMissing,\r\n    messages,\r\n    onCreate\r\n};\r\n\r\nexport {\r\n    type\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nfunction typeName(e) {\r\n    return e.field(\"mdbm.Type\");\r\n}\r\n\r\nexport {\r\n    typeName\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {common} from \"@common\";\r\nimport {library} from \"@library\";\r\nimport {type} from \"@type\";\r\nimport {typeName} from \"./typeName\";\r\n\r\nconst ids = {\r\n    addMissing,\r\n    createMissing,\r\n    get,\r\n    getAll,\r\n    set,\r\n    setAll,\r\n    setEmpty,\r\n    setSelf\r\n};\r\n\r\nconst idsField = \"mdbm.Ids\";\r\n\r\nfunction addMissing(e) {\r\n    const entryIds = Object.assign(\r\n        Object.create(null),\r\n        type.emptyIds(typeName(e)),\r\n        getAll(e)\r\n    );\r\n    setAll(e, entryIds);\r\n}\r\n\r\nfunction createMissing(e) {\r\n    const entryIds = getAll(e);\r\n    const libNames = Object.keys(entryIds);\r\n    libNames.forEach(addMissingEntry);\r\n    setAll(e, entryIds);\r\n\r\n    function addMissingEntry(libraryName) {\r\n        if (entryIds[libraryName] === null) {\r\n            entryIds[libraryName] = library.createEntry(libraryName).id;\r\n        }\r\n    }\r\n}\r\n\r\nfunction get(e, libName) {\r\n    return getAll(e)[libName];\r\n}\r\n\r\nfunction getAll(e) {\r\n    return common.json.parse(\r\n        e.field(idsField)\r\n    );\r\n}\r\n\r\nfunction set(e, libName, value) {\r\n    const entryIds = getAll(e);\r\n    entryIds[libName] = value;\r\n    setAll(e, entryIds);\r\n}\r\n\r\nfunction setAll(e, entryIds) {\r\n    e.set(\r\n        idsField,\r\n        common.json.stringify(entryIds)\r\n    );\r\n}\r\n\r\nfunction setEmpty(e) {\r\n    const entryIds = type.emptyIds(typeName(e));\r\n    setAll(e, entryIds);\r\n}\r\n\r\nfunction setSelf(e) {\r\n    set(e, typeName(e), e.id);\r\n}\r\n\r\nexport {\r\n    ids\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {type} from \"@type\";\r\n\r\nfunction displayName(e) {\r\n    const template = type.fromObjectEntry(e).field(\"DisplayNamePattern\");\r\n    const value = template.replace(\r\n        /\\$\\{(.*?)\\}/g,\r\n        (ignore, key) => getVal(e, key)\r\n    );\r\n    e.set(\"DisplayName\", value);\r\n    return value;\r\n}\r\n\r\nfunction getVal(e, key) {\r\n    return e.field(key);\r\n}\r\n\r\nexport {\r\n    displayName\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {ids} from \"./ids\";\r\nimport {displayName} from \"./displayName\";\r\n\r\nconst onSave = {\r\n    open,\r\n    post\r\n};\r\n\r\nfunction open(e, activeLibrary) {\r\n    // do nothing\r\n    message(\"nothing\");\r\n}\r\n\r\nfunction post(e) {\r\n    ids.addMissing(e);\r\n    ids.createMissing(e);\r\n    message(displayName(e));\r\n}\r\n\r\nexport {\r\n    onSave\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {onSave} from \"./onSave\";\r\nimport {type} from \"@type\";\r\nimport {ids} from \"./ids\";\r\n\r\nconst onCreate = {\r\n    open,\r\n    post\r\n};\r\n\r\nfunction open(e, activeLibrary) {\r\n    const libraryName = activeLibrary.title;\r\n    if (type.isMissing(libraryName)) {\r\n        activeLibrary.show();\r\n        throw type.messages.isMissing(libraryName);\r\n    }\r\n    e.set(\"mdbm.Type\", libraryName);\r\n    ids.setEmpty(e);\r\n}\r\n\r\nfunction post(e) {\r\n    ids.setSelf(e);\r\n    onSave.post(e);\r\n}\r\n\r\nexport {\r\n    onCreate\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {library} from \"@library\";\r\nimport {onCreate} from \"./onCreate\";\r\n\r\nfunction create(libraryName) {\r\n    const object = library.createEntry(libraryName);\r\n    onCreate.open(\r\n        object,\r\n        library.get(libraryName)\r\n    );\r\n    onCreate.post(object);\r\n    object.show();\r\n}\r\n\r\nexport {\r\n    create\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {create} from \"./create\";\r\nimport {displayName} from \"./displayName\";\r\nimport {onCreate} from \"./onCreate\";\r\n\r\nconst object = {\r\n    create,\r\n    displayName,\r\n    onCreate\r\n};\r\n\r\nexport {\r\n    object\r\n};\r\n"],"names":["getLibrary","libraryName","libByName","createEntry","create","checkAccess","entries","find","typeName","e","field","exists","undefined","isMissing","name","onOpen","post","library","title","message","get","json","parse","stringify","jsonString","JSON","object","common","messages","alreadyExists","x","check","hasTypesField","addType","typeEntry","hasTypeNames","hasTypes","map","includes","link","onCreate","open","set","baseType","existsAlready","createType","hasTypesNames","addEmptyId","entryIds","emptyIds","reduce","Object","type","ids","addMissing","createMissing","getAll","setAll","setEmpty","setSelf","idsField","assign","libNames","keys","forEach","addMissingEntry","id","libName","value","displayName","template","fromObjectEntry","replace","ignore","key","getVal","onSave","activeLibrary","show"],"mappings":"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"}