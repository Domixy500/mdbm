{"version":3,"file":"mdbm-debug.js","sources":["../src/app/index.js","../src/mdbm/object/create/fromPrototype.js","../src/mdbm/object/create/index.js","../src/mdbm/object/index.js","../src/mdbm/property/type.js","../src/mdbm/property/value.js","../src/mdbm/property/valueAsString.js","../src/mdbm/property/fromEntry.js","../src/mdbm/property/index.js"],"sourcesContent":["/*jslint beta*/\r\n/*global\r\n    log\r\n    message\r\n*/\r\n\r\nfunction notify(text) {\r\n    message(text);\r\n    log(text);\r\n};\r\n\r\nfunction createEntry(libraryName) {\r\n    return libByName(\r\n        libraryName\r\n    ).create({});\r\n}\r\n\r\nexport {\r\n    createEntry,\r\n    notify\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {createEntry} from \"@app\";\r\n\r\nfunction addType(object, prototype) {\r\n    const basedOn = prototype.field(\"basedOn\");\r\n    object.link(\"Type\", prototype);\r\n    if (basedOn.length === 1) {\r\n        addType(object, basedOn[0]);\r\n    }\r\n}\r\n\r\nfunction fromPrototype(prototype) {\r\n    const attributes = prototype.field(\"Attributes\");\r\n    const object = createEntry(\"Object\");\r\n    addType(object, prototype);\r\n    setPrototype(object, prototype);\r\n}\r\n\r\nfunction setPrototype(object, prototype) {\r\n    object.set(\"Prototype\", [prototype]);\r\n}\r\n\r\nexport {\r\n    fromPrototype\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {fromPrototype} from \"./fromPrototype\";\r\n\r\nconst create = {\r\n    fromPrototype\r\n};\r\n\r\nexport {\r\n    create\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {create} from \"./create\";\r\n\r\nconst object = {\r\n    create\r\n};\r\n\r\nexport {\r\n    object\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nfunction type(e) {\r\n    return e.field(\"Type\");\r\n}\r\n\r\nexport {\r\n    type\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {type} from \"./type\";\r\n\r\nfunction value(e, newValue) {\r\n    const propertyType = type(e);\r\n    if (newValue !== undefined) {\r\n        e.set(propertyType, newValue);\r\n    }\r\n    return e.field(\r\n        propertyType\r\n    );\r\n}\r\n\r\nexport {\r\n    value\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {type} from \"./type\";\r\nimport {value} from \"./value\";\r\n\r\nconst stringConverter = {\r\n    multiLine: value,\r\n    singleLine: value\r\n};\r\n\r\nfunction hasConverter(key) {\r\n    return Object.keys(\r\n        stringConverter\r\n    ).includes(key);\r\n}\r\n\r\nfunction valueAsString(e) {\r\n    const propertyType = type(e);\r\n\r\n    return (\r\n        hasConverter(propertyType)\r\n        ? stringConverter[propertyType](e)\r\n        : propertyType\r\n    );\r\n}\r\n\r\nexport {\r\n    valueAsString\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {type} from \"./type.js\";\r\nimport {value} from \"./value.js\";\r\nimport {valueAsString} from \"./valueAsString.js\";\r\n\r\nfunction fromEntry(e) {\r\n    const property = {\r\n        type: () => type(e),\r\n        value: (newValue) => value(e, newValue),\r\n        valueAsString: () => valueAsString(e)\r\n    }\r\n    \r\n    return Object.freeze({\r\n        property\r\n    });\r\n}\r\n\r\nexport {\r\n    fromEntry\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {fromEntry} from \"./fromEntry\";\r\nimport {type} from \"./type\";\r\nimport {value} from \"./value\";\r\nimport {valueAsString} from \"./valueAsString\";\r\n\r\nconst property = {\r\n    fromEntry,\r\n    type,\r\n    value,\r\n    valueAsString\r\n};\r\n\r\nexport {\r\n    property\r\n};\r\n"],"names":["notify","text","message","log","createEntry","libraryName","libByName","create","addType","object","prototype","basedOn","field","link","length","fromPrototype","setPrototype","set","type","e","value","newValue","propertyType","undefined","stringConverter","multiLine","singleLine","hasConverter","key","Object","keys","includes","valueAsString","fromEntry","property","freeze"],"mappings":";;IAMA,SAASA,OAAOC;QACZC,QAAQD;QACRE,IAAIF;AACR;IAEA,SAASG,YAAYC;QACjB,OAAOC,UACHD,aACFE,OAAO,CAAA;AACb;ICVA,SAASC,QAAQC,QAAQC;QACrB,MAAMC,UAAUD,UAAUE,MAAM;QAChCH,OAAOI,KAAK,QAAQH;QACpB,IAAIC,QAAQG,WAAW,GAAG;YACtBN,QAAQC,QAAQE,QAAQ;AAC5B;AACJ;IAEA,SAASI,cAAcL;QACAA,UAAUE,MAAM;QACnC,MAAMH,SAASL,YAAY;QAC3BI,QAAQC,QAAQC;QAChBM,aAAaP,QAAQC;AACzB;IAEA,SAASM,aAAaP,QAAQC;QAC1BD,OAAOQ,IAAI,aAAa,EAACP;AAC7B;ICjBA,MAAMH,SAAS;QACXQ;;ICDC,MAACN,SAAS;QACXF;;ICHJ,SAASW,KAAKC;QACV,OAAOA,EAAEP,MAAM;AACnB;ICAA,SAASQ,MAAMD,GAAGE;QACd,MAAMC,eAAeJ,KAAKC;QAC1B,IAAIE,aAAaE,WAAW;YACxBJ,EAAEF,IAAIK,cAAcD;AACxB;QACA,OAAOF,EAAEP,MACLU;AAER;ICPA,MAAME,kBAAkB;QACpBC,WAAWL;QACXM,YAAYN;;IAGhB,SAASO,aAAaC;QAClB,OAAOC,OAAOC,KACVN,iBACFO,SAASH;AACf;IAEA,SAASI,cAAcb;QACnB,MAAMG,eAAeJ,KAAKC;QAE1B,OACIQ,aAAaL,gBACXE,gBAAgBF,cAAcH,KAC9BG;AAEV;IClBA,SAASW,UAAUd;QACf,MAAMe,WAAW;YACbhB,MAAM,MAAMA,KAAKC;YACjBC,OAAQC,YAAaD,MAAMD,GAAGE;YAC9BW,eAAe,MAAMA,cAAcb;;QAGvC,OAAOU,OAAOM,OAAO;YACjBD;;AAER;ICTK,MAACA,WAAW;QACbD;QACAf;QACAE;QACAY;;;;;;"}