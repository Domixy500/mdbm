{"version":3,"file":"mdbm-debug.js","sources":["../src/complex/type/index.js","../src/complex/object/onCreate.js","../src/complex/object/index.js"],"sourcesContent":["/*jslint beta*/\n/*global\n    libByName\n*/\n\nconst type = {\n    fromName\n};\n\nfunction fromName(typeName) {\n    return types().find(\n        (e) => e.field(\"Name\") === typeName\n    );\n}\n\nfunction types() {\n    return libByName(\"mdbm.Type\").entries();\n}\n\nexport {\n    type\n};\n","/*jslint beta*/\n/*global\n    lib\n*/\n\nimport {type} from \"../type\";\n\nconst onCreate = {\n    open,\n    post,\n    pre\n};\n\nfunction open(e) {\n    setMdbmType(e, lib().title);\n}\n\nfunction post() {\n    \n}\n\nfunction pre(e) {\n    \n}\n\nfunction setMdbmType(e, typeName) {\n    const mdbmType = type.fromName(typeName);\n    e.set(\"mdbm.Type\", mdbmType);\n}\n\nexport {\n    onCreate\n};\n","/*jslint beta*/\n/*global*/\n\nimport {onCreate} from \"./onCreate\";\n\nconst object = {\n    onCreate\n};\n\nexport {\n    object\n};\n"],"names":["type","fromName","typeName","types","find","e","field","libByName","entries","onCreate","open","post","pre","setMdbmType","lib","title","mdbmType","set","object"],"mappings":";;IAKA,MAAMA,OAAO;QACTC;;IAGJ,SAASA,SAASC;QACd,OAAOC,QAAQC,KACVC,KAAMA,EAAEC,MAAM,YAAYJ;AAEnC;IAEA,SAASC;QACL,OAAOI,UAAU,aAAaC;AAClC;ICVA,MAAMC,WAAW;QACbC;QACAC;QACAC;;IAGJ,SAASF,KAAKL;QACVQ,YAAYR,GAAGS,MAAMC;AACzB;IAEA,SAASJ,QAET;IAEA,SAASC,IAAIP,IAEb;IAEA,SAASQ,YAAYR,GAAGH;QACpB,MAAMc,WAAWhB,KAAKC,SAASC;QAC/BG,EAAEY,IAAI,aAAaD;AACvB;ICvBK,MAACE,SAAS;QACXT;;;;"}