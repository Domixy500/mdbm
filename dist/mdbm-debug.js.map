{"version":3,"file":"mdbm-debug.js","sources":["../src/library/checkAccess.js","../src/type/create.js","../src/type/entries.js","../src/type/find.js","../src/type/exists.js","../src/type/isMissing.js","../src/type/onCreate.js","../src/type/index.js","../src/library/onOpen.js","../src/library/index.js","../src/object/onCreate.js","../src/object/index.js"],"sourcesContent":["/*jslint beta*/\r\n/*global\r\n    libByName\r\n*/\r\n\r\nfunction checkAccess() {\r\n    libByName(\"Object\");\r\n    libByName(\"mdbm.Type\");\r\n}\r\n\r\nexport {\r\n    checkAccess\r\n};\r\n","/*jslint beta*/\r\n/*global\r\n    libByName\r\n*/\r\n\r\nfunction create(name, basedOn) {\r\n    const type = libByName(\"mdbm.Type\").create({});\r\n    type.set(\"Name\", name);\r\n    if (basedOn !== undefined) {\r\n        type.set(\"hasTypes\", basedOn.field(\"hasTypes\"));\r\n    }\r\n    type.link(\"hasTypes\", type);\r\n    return type;\r\n}\r\n\r\nexport {\r\n    create\r\n};\r\n","/*jslint beta*/\r\n/*global\r\n    libByName\r\n*/\r\n\r\nfunction entries() {\r\n    return libByName(\"mdbm.Type\").entries();\r\n}\r\n\r\nexport {\r\n    entries\r\n};\r\n","/*jslint beta*/\r\n/*global\r\n    libByName\r\n*/\r\n\r\n// import {entries} from \"./entries\";\r\n\r\nfunction find(typeName) {\r\n    return libByName(\"mdbm.Type\").findByKey(typeName);\r\n    // return entries().find(\r\n    //     (e) => e.field(\"Name\") === name\r\n    // );\r\n}\r\n\r\nexport {\r\n    find\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\n// import {entries} from \"./entries\";\r\nimport {find} from \"./find\";\r\n\r\nfunction exists(typeName) {\r\n    return find(typeName) !== null;\r\n    // return entries().some(\r\n    //     (e) => e.field(\"Name\") === name\r\n    // );\r\n}\r\n\r\nexport {\r\n    exists\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {exists} from \"./exists\";\r\n\r\nfunction isMissing(name) {\r\n    return !exists(name);\r\n}\r\n\r\nexport {\r\n    isMissing\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {find} from \"./find\";\r\n\r\nconst onCreate = {\r\n    open,\r\n    post\r\n};\r\n\r\nfunction open(e) {\r\n    e.set(\r\n        \"hasTypes\",\r\n        find(\"Object\")\r\n    );\r\n}\r\n\r\nfunction post(e) {\r\n    e.link(\r\n        \"hasTypes\",\r\n        find(\"Object\")\r\n    );\r\n    return e;\r\n}\r\n\r\nexport {\r\n    onCreate\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {create} from \"./create\";\r\nimport {entries} from \"./entries\";\r\nimport {exists} from \"./exists\";\r\nimport {find} from \"./find\";\r\nimport {isMissing} from \"./isMissing\";\r\nimport {onCreate} from \"./onCreate.js\";\r\n\r\nconst type = {\r\n    create,\r\n    entries,\r\n    exists,\r\n    find,\r\n    isMissing,\r\n    onCreate\r\n};\r\n\r\nexport {\r\n    type\r\n};\r\n","/*jslint beta*/\r\n/*global\r\n    message\r\n*/\r\n\r\nimport {checkAccess} from \"./checkAccess\";\r\nimport {type} from \"@type\";\r\n\r\nconst onOpen = {\r\n    post\r\n};\r\n\r\nfunction post(library) {\r\n    checkAccess();\r\n    if (type.isMissing(library.title)) {\r\n        message(\"Type '\" + library.title + \"' is not defined!\");\r\n    }\r\n}\r\n\r\nexport {\r\n    onOpen\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {onOpen} from \"./onOpen\";\r\n\r\nconst library = {\r\n    onOpen\r\n};\r\n\r\nexport {\r\n    library\r\n};\r\n","/*jslint beta*/\r\n/*global\r\n    cancel\r\n    lib\r\n*/\r\n\r\nimport {library} from \"@library\";\r\n\r\nconst onCreate = {\r\n    open,\r\n    post\r\n};\r\n\r\nfunction open(e) {\r\n    \r\n    // const library = lib();\r\n    // if (type.isMissing(library.title)) {\r\n    //     library.show();\r\n    //     //throw (\"Type '\" + library.title + \"' is not defined!\"\r\n    //     //);\r\n    // }\r\n}\r\n\r\nfunction post(e) {\r\n    \r\n}\r\n\r\nexport {\r\n    onCreate\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {onCreate} from \"./onCreate\";\r\n\r\nconst object = {\r\n    onCreate\r\n};\r\n\r\nexport {\r\n    object\r\n};\r\n"],"names":["checkAccess","libByName","create","name","basedOn","type","set","undefined","field","link","entries","find","typeName","findByKey","exists","isMissing","onCreate","open","post","e","onOpen","library","title","message","object"],"mappings":";;IAKA,SAASA;QACLC,UAAU;QACVA,UAAU;AACd;ICHA,SAASC,OAAOC,MAAMC;QAClB,MAAMC,OAAOJ,UAAU,aAAaC,OAAO,CAAA;QAC3CG,KAAKC,IAAI,QAAQH;QACjB,IAAIC,YAAYG,WAAW;YACvBF,KAAKC,IAAI,YAAYF,QAAQI,MAAM;AACvC;QACAH,KAAKI,KAAK,YAAYJ;QACtB,OAAOA;AACX;ICRA,SAASK;QACL,OAAOT,UAAU,aAAaS;AAClC;ICAA,SAASC,KAAKC;QACV,OAAOX,UAAU,aAAaY,UAAUD;AAI5C;ICNA,SAASE,OAAOF;QACZ,OAAOD,KAAKC,cAAc;AAI9B;ICNA,SAASG,UAAUZ;QACf,QAAQW,OAAOX;AACnB;ICFA,MAAMa,aAAW;QACjBC,MAAIA;QACJC,MAAIA;;IAGJ,SAASD,OAAKE;QACVA,EAAEb,IACE,YACAK,KAAK;AAEb;IAEA,SAASO,OAAKC;QACVA,EAAEV,KACE,YACAE,KAAK;QAET,OAAOQ;AACX;ICbK,MAACd,OAAO;QACTH;QACAQ;QACAI;QACAH;QACAI;QACJC,UAAIA;;ICRJ,MAAMI,SAAS;QACfF,MAAIA;;IAGJ,SAASA,OAAKG;QACVrB;QACA,IAAIK,KAAKU,UAAUM,QAAQC,QAAQ;YAC/BC,QAAQ,WAAWF,QAAQC,QAAQ;AACvC;AACJ;ICZK,MAACD,UAAU;QACZD;;ICEJ,MAAMJ,WAAW;QACbC;QACAC;;IAGJ,SAASD,KAAKE,IAQd;IAEA,SAASD,KAAKC,IAEd;ICpBK,MAACK,SAAS;QACXR;;;;;;"}