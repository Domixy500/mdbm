{"version":3,"file":"mdbm-debug.js","sources":["../src/app/index.js","../src/mdbm/property/type.js","../src/mdbm/property/value.js","../src/mdbm/property/valueAsString.js"],"sourcesContent":["/*jslint beta*/\r\n/*global\r\n    log\r\n    message\r\n*/\r\n\r\nconst notify = function (text) {\r\n    message(text);\r\n    log(text);\r\n};\r\n\r\nexport {\r\n    notify\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nfunction type(e) {\r\n    return e.field(\"Type\");\r\n}\r\n\r\nexport {\r\n    type\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {type} from \"./type\";\r\n\r\nfunction value(e) {\r\n    return e.field(\r\n        type(e)\r\n    );\r\n}\r\n\r\nexport {\r\n    value\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {type} from \"./type\";\r\nimport {value} from \"./value\";\r\n\r\nconst stringConverter = {\r\n    multiLine: value,\r\n    singleLine: value\r\n};\r\n\r\nfunction hasConverter(key) {\r\n    return Object.keys(\r\n        stringConverter\r\n    ).includes(key);\r\n}\r\n\r\nfunction valueAsString(e) {\r\n    const propertyType = type(e);\r\n\r\n    return (\r\n        hasConverter(propertyType)\r\n        ? stringConverter[type](e)\r\n        : type\r\n    );\r\n}\r\n\r\nexport {\r\n    valueAsString\r\n};\r\n"],"names":["notify","text","message","log","type","e","field","value","stringConverter","multiLine","singleLine","hasConverter","key","Object","keys","includes","valueAsString","propertyType"],"mappings":";;IAMK,MAACA,SAAS,SAAUC;QACrBC,QAAQD;QACRE,IAAIF;AACR;ICNA,SAASG,KAAKC;QACV,OAAOA,EAAEC,MAAM;AACnB;ICAA,SAASC,MAAMF;QACX,OAAOA,EAAEC,MACLF,KAAKC;AAEb;ICHA,MAAMG,kBAAkB;QACpBC,WAAWF;QACXG,YAAYH;;IAGhB,SAASI,aAAaC;QAClB,OAAOC,OAAOC,KACVN,iBACFO,SAASH;AACf;IAEA,SAASI,cAAcX;QACnB,MAAMY,eAAeb,KAAKC;QAE1B,OACIM,aAAaM,gBACXT,gBAAgBJ,MAAMC,KACtBD;AAEV;;;;"}