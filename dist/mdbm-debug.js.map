{"version":3,"file":"mdbm-debug.js","sources":["../src/app/index.js","../src/mdbm/property/type.js","../src/mdbm/property/value.js","../src/mdbm/property/valueAsString.js"],"sourcesContent":["/*jslint beta*/\n/*global\n    log\n    message\n*/\n\nconst notify = function (text) {\n    message(text);\n    log(text);\n};\n\nexport {\n    notify\n};\n","/*jslint beta*/\n/*global*/\n\nfunction type(e) {\n    return e.field(\"Type\");\n}\n\nexport {\n    type\n};\n","/*jslint beta*/\n/*global*/\n\nimport {type} from \"./type\";\n\nfunction value(e) {\n    return e.field(\n        type(e)\n    );\n}\n\nexport {\n    value\n};\n","/*jslint beta*/\n/*global*/\n\nimport {type} from \"./type\";\nimport {value} from \"./value\";\n\nconst stringConverter = {\n    multiLine: value,\n    singleLine: value\n};\n\nfunction hasConverter(key) {\n    return Object.keys(\n        stringConverter\n    ).includes(key);\n}\n\nfunction valueAsString(e) {\n    const propertyType = type(e);\n\n    return (\n        hasConverter(propertyType)\n        ? stringConverter[type](e)\n        : type\n    );\n}\n\nexport {\n    valueAsString\n};\n"],"names":["notify","text","message","log","type","e","field","value","stringConverter","multiLine","singleLine","hasConverter","key","Object","keys","includes","valueAsString","propertyType"],"mappings":";;IAMK,MAACA,SAAS,SAAUC;QACrBC,QAAQD;QACRE,IAAIF;AACR;ICNA,SAASG,KAAKC;QACV,OAAOA,EAAEC,MAAM;AACnB;ICAA,SAASC,MAAMF;QACX,OAAOA,EAAEC,MACLF,KAAKC;AAEb;ICHA,MAAMG,kBAAkB;QACpBC,WAAWF;QACXG,YAAYH;;IAGhB,SAASI,aAAaC;QAClB,OAAOC,OAAOC,KACVN,iBACFO,SAASH;AACf;IAEA,SAASI,cAAcX;QACnB,MAAMY,eAAeb,KAAKC;QAE1B,OACIM,aAAaM,gBACXT,gBAAgBJ,MAAMC,KACtBD;AAEV;;;;"}