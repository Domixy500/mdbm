{"version":3,"file":"mdbm-debug.js","sources":["../src/complex/type/index.js","../src/complex/object/onCreate.js","../src/complex/object/index.js"],"sourcesContent":["/*jslint beta*/\r\n/*global\r\n    libByName\r\n*/\r\n\r\nconst type = {\r\n    fromName\r\n};\r\n\r\nfunction fromName(typeName) {\r\n    return types.find(\r\n        (e) => e.field(\"Name\") === typeName\r\n    );\r\n}\r\n\r\nfunction types() {\r\n    return libByName(\"mdbm.Type\").entries();\r\n}\r\n\r\nexport {\r\n    type\r\n};\r\n","/*jslint beta*/\r\n/*global\r\n    lib\r\n*/\r\n\r\nimport {type} from \"../type\";\r\n\r\nconst onCreate = {\r\n    open,\r\n    post,\r\n    pre\r\n};\r\n\r\nfunction open(e) {\r\n    setMdbmType(e, lib().title);\r\n}\r\n\r\nfunction post() {\r\n    \r\n}\r\n\r\nfunction pre(e) {\r\n    \r\n}\r\n\r\nfunction setMdbmType(e, typeName) {\r\n    const mdbmType = type.fromName(typeName);\r\n    e.set(\"mdbm.Type\", mdbmType);\r\n}\r\n\r\nexport {\r\n    onCreate\r\n};\r\n","/*jslint beta*/\r\n/*global*/\r\n\r\nimport {onCreate} from \"./onCreate\";\r\n\r\nconst object = {\r\n    onCreate\r\n};\r\n\r\nexport {\r\n    object\r\n};\r\n"],"names":["type","fromName","typeName","types","find","e","field","libByName","entries","onCreate","open","post","pre","setMdbmType","lib","title","mdbmType","set","object"],"mappings":";;IAKA,MAAMA,OAAO;QACTC;;IAGJ,SAASA,SAASC;QACd,OAAOC,MAAMC,KACRC,KAAMA,EAAEC,MAAM,YAAYJ;AAEnC;IAEA,SAASC;QACL,OAAOI,UAAU,aAAaC;AAClC;ICVA,MAAMC,WAAW;QACbC;QACAC;QACAC;;IAGJ,SAASF,KAAKL;QACVQ,YAAYR,GAAGS,MAAMC;AACzB;IAEA,SAASJ,QAET;IAEA,SAASC,IAAIP,IAEb;IAEA,SAASQ,YAAYR,GAAGH;QACpB,MAAMc,WAAWhB,KAAKC,SAASC;QAC/BG,EAAEY,IAAI,aAAaD;AACvB;ICvBK,MAACE,SAAS;QACXT;;;;"}